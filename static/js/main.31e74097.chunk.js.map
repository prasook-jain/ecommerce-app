{"version":3,"sources":["reduxStore/selectors.ts","reduxStore/action.ts","Components/Header/index.tsx","Components/CartSidebar/CartItem/style.tsx","Components/QuantityInput/index.tsx","Components/CartSidebar/CartItem/index.tsx","Components/CartSidebar/style.tsx","Components/CartSidebar/index.tsx","Components/Content/ItemCard/style.tsx","Components/Content/ItemCard/index.tsx","Components/Content/CategorySection/categoryItemsSelector.ts","Components/Content/CategorySection/index.tsx","Components/Content/index.tsx","Components/Checkout/index.tsx","utility/api.ts","Components/Login/index.tsx","App.tsx","reduxStore/sagas.ts","reduxStore/reducer.ts","reduxStore/store.ts","index.tsx"],"names":["getUser","createSelector","state","user","getCart","cart","getItemHash","itemsHash","getOrdersCount","orders","length","ordersCount","SET_ITEMS","SET_CATEGORIES","FETCH_INITIAL_DATA","SET_CART_TO_STORE","ADD_ITEM_TO_CART","UPDATE_CART","UPDATE_ITEM_OF_CART","REMOVE_ITEM_FROM_CART","SET_USER","ADD_ORDER","PLACE_ORDER","SET_USER_ORDERS","cartItemCountSelector","items","HeaderWrapper","styled","div","MenuDropdown","props","useSelector","dispatch","useDispatch","Item","name","disabled","onClick","type","localStorage","setItem","JSON","stringify","payload","Header","history","useHistory","cartItemCount","isUserLogedIn","className","ShopOutlined","style","fontSize","shape","push","overlay","CartItemWrapper","Wrapper","QuantityInput","quantity","updateQuantity","value","onBlur","onChange","event","parseInt","inputStrToInt","target","connect","cartItem","itemId","item","str","slice","src","image_urls","alt","discount_price","id","SidebarWrapper","getTotalSelector","cartData","reduce","reducedValue","CartSidebar","totalPrice","checkoutDisabled","map","ItemDiv","ItemCard","price","itemName","title","getItemsForCategory","categories","category","itemIds","makeCategoryItemsSelector","GridDiv","CategoryWrapper","categoryItemsSelector","categoryItems","getCategories","Object","values","ContentWrapper","Content","CheckoutWrapper","Checkout","cartItems","totalCost","itemLayout","size","dataSource","footer","console","log","order","orderId","uuidv4","userId","callbackFn","renderItem","extra","width","Meta","getItems","a","Promise","resolve","mockBackend","getUserOrders","filter","user_id","login","username","password","reject","userMatched","userObj","users","forEach","email","hash_token","isUserValid","user_token","some","Login","onFinish","response","message","error","labelCol","span","wrapperCol","onFinishFailed","label","rules","required","Password","offset","htmlType","App","isLogedIn","useEffect","exact","path","marginTop","to","fetchItems","fetchCategories","fetchUserOrders","setCartDataToStore","setUserFromStore","fetchIntialData","placeOrderSaga","addItemToCartSaga","updateItemOfCartSaga","removeItemFromCartSaga","mySaga","call","put","action","userOrders","curCartState","select","parse","getItem","data","curUserState","curUser","validUser","all","last_update_data","Date","isAlreadyPresent","info","last_update_date","updatedItems","takeLatest","takeEvery","initialState","rootReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","compose","store","createStore","applyMiddleware","run","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.31e74097.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\nimport { IReduxStore } from \"./reducer\";\nimport { ICart, IItemsHash, IUser } from \"../utility/types\";\n\nexport const getUser = createSelector<IReduxStore, IUser, IUser>(\n  (state) => state.user,\n  (user) => user\n);\n\nexport const getCart = createSelector<IReduxStore, ICart, ICart>(\n  (state) => state.cart,\n  (cart) => cart\n);\n\nexport const getItemHash = createSelector<IReduxStore, IItemsHash, IItemsHash>(\n  (state) => state.itemsHash,\n  (itemsHash) => itemsHash\n);\n\nexport const getOrdersCount = createSelector<IReduxStore, number, number>(\n  (state) => state.orders.length,\n  (ordersCount) => ordersCount\n);\n","// Action for setting Initial Data from backend\nexport const SET_ITEMS = \"SET_ITEMS\";\nexport const SET_CATEGORIES = \"SET_CATEGORIES\";\nexport const FETCH_INITIAL_DATA = \"FETCH_INITIAL_DATA\";\n\n// Cart Actions\nexport const SET_CART_TO_STORE = \"SET_CART_TO_STORE\";\nexport const ADD_ITEM_TO_CART = \"ADD_ITEM_TO_CART\";\nexport const UPDATE_CART = \"UPDATE_CART\";\nexport const UPDATE_ITEM_OF_CART = \"UPDATE_ITEM_OF_CART\";\nexport const REMOVE_ITEM_FROM_CART = \"REMOVE_ITEM_FROM_CART\";\n\n// User Action\nexport const SET_USER = \"SET_USER\";\nexport const ADD_ORDER = \"ADD_ORDER\";\nexport const PLACE_ORDER = \"PLACE_ORDER\";\nexport const SET_USER_ORDERS = \"SET_USER_ORDERS\";\nexport const FETCH_USER_ORDERS = \"FETCH_USER_ORDERS\";\n","import styled from \"styled-components\";\nimport { createSelector } from \"reselect\";\nimport { Button, Dropdown, Menu } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { ShopOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { IReduxStore } from \"../../reduxStore/reducer\";\nimport { getOrdersCount, getUser } from \"../../reduxStore/selectors\";\nimport { SET_USER } from \"../../reduxStore/action\";\n\nimport { IUser } from \"../../utility/types\";\nimport \"antd/dist/antd.css\";\n\nconst cartItemCountSelector = createSelector<IReduxStore, number, number>(\n  (state) => state.cart.items.length,\n  (length) => length\n);\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 4rem;\n  padding: 10px;\n  z-index: 1;\n  background-color: darkgrey;\n\n  .logo {\n    margin-right: auto;\n  }\n\n  .right-side {\n    margin-left: auto;\n    margin-right: 1rem;\n  }\n`;\n\nconst MenuDropdown = (props) => {\n  const { user } = props;\n  const ordersCount = useSelector(getOrdersCount);\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    const user: IUser = {\n      type: \"guest\",\n    };\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    dispatch({\n      type: SET_USER,\n      payload: {\n        user,\n      },\n    });\n  };\n\n  return (\n    <Menu>\n      <Menu.Item key=\"profile-details\">As {user.name}</Menu.Item>\n      <Menu.Item key=\"order\" disabled>\n        Orders ({ordersCount})\n      </Menu.Item>\n      <Menu.Item key=\"logout\">\n        <Button onClick={handleLogout}>Logout</Button>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nconst Header: React.FunctionComponent = () => {\n  const history = useHistory();\n\n  const cartItemCount = useSelector(cartItemCountSelector);\n  const user = useSelector(getUser);\n\n  const isUserLogedIn = user.type === \"user\";\n\n  const handleLogIn = () => {\n    history.push(\"/login\");\n  };\n\n  const goToCheckout = () => {\n    history.push(\"/checkout\");\n  };\n\n  return (\n    <HeaderWrapper>\n      <div className=\"logo\">\n        <ShopOutlined style={{ fontSize: \"40px\" }} />\n      </div>\n      <Button\n        type=\"primary\"\n        shape=\"round\"\n        className=\"right-side\"\n        disabled={cartItemCount === 0}\n        onClick={goToCheckout}\n      >{`Cart (${cartItemCount})`}</Button>\n      {isUserLogedIn ? (\n        <Dropdown overlay={<MenuDropdown user={user} />}>\n          <Button type=\"primary\" shape=\"round\">\n            MyAccount\n          </Button>\n        </Dropdown>\n      ) : (\n        <Button type=\"primary\" shape=\"round\" onClick={handleLogIn}>\n          Login\n        </Button>\n      )}\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const CartItemWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  box-sizing: border-box;\n  grid-template-areas:\n    \"heading heading\"\n    \"aimage price\" \"aimage quantity\"\n    \"aimage cost\"\n    \"aimage actions\";\n  cursor: default;\n  margin-top: 10px;\n  padding: 0.5rem;\n\n  grid-template-columns: 5rem 1fr;\n  grid-template-rows: repeat(5, 1.5rem);\n  justify-items: end;\n\n  height: 8.5rem;\n  border: 1px solid black;\n\n  & .cart-item-image {\n    grid-area: aimage;\n    display: flex;\n    align-items: center;\n    width: 5rem;\n    /* height: 3rem; */\n    overflow: hidden;\n    & img {\n      padding: 0.2rem;\n      width: 100%;\n    }\n  }\n  & .cart-item-heading {\n    justify-self: start;\n    grid-area: heading;\n  }\n  & .cart-item-price {\n    grid-area: price;\n  }\n  & .cart-item-quantity {\n    display: flex;\n    grid-area: quantity;\n  }\n  & .cart-item-cost {\n    grid-area: cost;\n  }\n\n  & .cart-item-actions {\n    grid-area: actions;\n    text-decoration: underline;\n    color: #3131ff;\n    cursor: pointer;\n  }\n\n  & .grid-item > .description {\n    box-sizing: border-box;\n    font-size: 13px;\n    font-style: italic;\n    font-weight: 600;\n  }\n`;\n","import styled from \"styled-components\";\n\nconst inputStrToInt = (value) => parseInt(value || \"1\", 10);\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  input {\n    width: 2.5rem;\n  }\n  button {\n    margin: 0 0.4rem;\n  }\n`;\n\nconst QuantityInput = (props: any) => {\n  const { quantity, updateQuantity } = props;\n\n  const handleChange = (event) => {\n    const value = inputStrToInt(event.target.value);\n    updateQuantity(value);\n  };\n\n  const handleBlur = () => {\n    if (!quantity) {\n      updateQuantity(1);\n    }\n  };\n\n  const increment = () => {\n    // const value = quantity + 1;\n    updateQuantity(quantity + 1);\n  };\n  const decrement = () => {\n    // const value = quantity;\n    if (quantity > 1) {\n      updateQuantity(quantity - 1);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <button onClick={increment}>+</button>\n      <input value={quantity} onBlur={handleBlur} onChange={handleChange} />\n      <button onClick={decrement} disabled={false}>\n        -\n      </button>\n    </Wrapper>\n  );\n};\n\nexport default QuantityInput;\n","import { connect, useDispatch } from \"react-redux\";\n\nimport { CartItemWrapper } from \"./style\";\nimport QuantityInput from \"../../QuantityInput\";\n\nimport {\n  UPDATE_ITEM_OF_CART,\n  REMOVE_ITEM_FROM_CART,\n} from \"../../../reduxStore/action\";\nimport { IReduxStore } from \"../../../reduxStore/reducer\";\n\nimport { ICartItem, IItem } from \"../../../utility/types\";\n\ninterface ICartItemProps {\n  item: IItem;\n  quantity: number;\n}\n\n/** CSS ellipses is complex to handle with grid-item  */\nconst ellipsify = (str: string, length: number) => {\n  return str.length > length ? `${str.slice(0, length)} ...` : str;\n};\n\nconst CartItem: React.FC<ICartItemProps> = (props) => {\n  const { item, quantity } = props;\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch({\n      type: REMOVE_ITEM_FROM_CART,\n      payload: {\n        itemId: item.id,\n      },\n    });\n  };\n\n  const updateQuantity = (value) => {\n    dispatch({\n      type: UPDATE_ITEM_OF_CART,\n      payload: {\n        itemId: item.id,\n        quantity: value,\n      },\n    });\n  };\n\n  return (\n    <CartItemWrapper>\n      <div className=\"cart-item-heading grid-item\">\n        <div>\n          <div>{ellipsify(item.name, 30)}</div>\n        </div>\n      </div>\n      <div className=\"cart-item-image grid-item\">\n        <img src={item.image_urls[0]} alt={item.name} />\n      </div>\n      <div className=\"cart-item-price grid-item\">\n        <span className=\"description\">Price : </span>\n        {item.discount_price}\n      </div>\n      <div className=\"cart-item-quantity grid-item\">\n        <span className=\"description\">Quantity</span>\n        <QuantityInput quantity={quantity} updateQuantity={updateQuantity} />\n      </div>\n      <div className=\"cart-item-cost grid-item\">\n        <span className=\"description\">Total Cost : </span>\n        {item.discount_price * quantity}\n      </div>\n      <div className=\"cart-item-actions grid-item\" onClick={handleClick}>\n        Remove\n      </div>\n    </CartItemWrapper>\n  );\n};\n\nconst mapStateToProps = (\n  state: IReduxStore,\n  props: { cartItem: ICartItem }\n) => {\n  const {\n    cartItem: { itemId, quantity },\n  } = props;\n  return { item: state.itemsHash[itemId], quantity };\n};\n\nexport default connect(mapStateToProps)(CartItem);\n","import styled from \"styled-components\";\n\nexport const SidebarWrapper = styled.div`\n  position: fixed;\n  right: 0;\n  top: 4rem;\n  bottom: 0;\n  width: 300px;\n  padding: 0 10px;\n  margin-left: 10px;\n  background-color: whitesmoke;\n  display: flex;\n  flex-direction: column;\n\n  & .list-wrapper {\n    height: auto;\n    overflow: auto;\n  }\n  & .details {\n    padding: 5px;\n\n    border: 1px solid black;\n    margin-top: auto;\n    margin-bottom: 5px;\n    display: flex;\n    flex-direction: column;\n\n    & .total {\n      align-self: flex-end;\n      font-size: 14px;\n      margin-bottom: 1rem;\n      font-weight: 600;\n    }\n    & .checkout-button {\n      border-radius: 5px;\n      padding: 5px;\n      height: 2rem;\n      background-color: blue;\n      color: white;\n\n      &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n      }\n    }\n  }\n`;\n","import { createSelector } from \"reselect\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport CartItem from \"./CartItem\";\nimport { SidebarWrapper } from \"./style\";\n\nimport { IReduxStore } from \"../../reduxStore/reducer\";\nimport { getCart, getItemHash } from \"../../reduxStore/selectors\";\nimport { ICart, IItemsHash } from \"../../utility/types\";\n\nconst getTotalSelector = createSelector<IReduxStore, ICart, IItemsHash, number>(\n  [getCart, getItemHash],\n  (cartData, itemsHash) => {\n    return cartData.items.reduce(\n      (reducedValue, item) =>\n        reducedValue + item.quantity * itemsHash[item.itemId].discount_price,\n      0\n    );\n  }\n);\n\nconst CartSidebar = () => {\n  const cartData = useSelector(getCart);\n  const totalPrice = useSelector(getTotalSelector);\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push(\"/checkout\");\n  };\n\n  const checkoutDisabled = cartData.items.length === 0;\n  return (\n    <SidebarWrapper className=\"sidebar\">\n      <div className=\"list-wrapper\">\n        {cartData.items.map((item) => {\n          return <CartItem key={item.itemId} cartItem={item} />;\n        })}\n      </div>\n      <div className=\"details\">\n        <div className=\"total\">Total: {totalPrice}</div>\n        <button\n          className=\"checkout-button\"\n          onClick={handleClick}\n          disabled={checkoutDisabled}\n        >\n          Checkout\n        </button>\n      </div>\n    </SidebarWrapper>\n  );\n};\n\nexport default CartSidebar;\n","import styled from \"styled-components\";\n\nexport const ItemDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  &:hover {\n    box-shadow: 0 0 3px 3px lightgray;\n  }\n\n  & .item-image {\n    width: 330px;\n  }\n\n  & .item-image-container {\n    display: flex;\n    justify-content: center;\n    height: 400px;\n    align-items: center;\n    overflow: hidden;\n    background: white;\n  }\n\n  & .item-details {\n    box-sizing: border-box;\n    padding: 1rem 1rem;\n    display: grid;\n    grid-template-areas:\n      \"item-name item-name\"\n      \"item-price cart-button\";\n\n    height: 100px;\n    border-top: 1px solid black;\n    background-color: white;\n\n    & > .item-name {\n      font-size: 14px;\n      line-height: 18px;\n      height: 36px;\n      font-weight: 700;\n      grid-area: item-name;\n    }\n\n    & > .item-price {\n      display: flex;\n      align-items: center;\n      grid-area: item-price;\n      div {\n        margin-right: 1rem;\n      }\n      .item-actual-price {\n        color: darkgray;\n        text-decoration: line-through;\n      }\n    }\n\n    & > .cart-button {\n      color: white;\n      padding: 0.2rem;\n      border-radius: 4px;\n      background-color: blue;\n      grid-area: cart-button;\n\n      :hover {\n        cursor: pointer;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ItemDiv } from \"./style\";\nimport { ADD_ITEM_TO_CART } from \"../../../reduxStore/action\";\nimport { IItem } from \"../../../utility/types\";\n\nexport interface IItemCardProps {\n  item: IItem;\n}\n\nconst ItemCard: React.FunctionComponent<IItemCardProps> = (props) => {\n  const { id, name, price, image_urls, discount_price } = props.item;\n\n  const dispatch = useDispatch();\n\n  const handleAddCartButton = () => {\n    dispatch({\n      type: ADD_ITEM_TO_CART,\n      payload: {\n        cartItem: { itemId: id, quantity: 1 },\n      },\n    });\n  };\n\n  const itemName = name.length > 75 ? name.slice(0, 75) + \"...\" : name;\n  return (\n    <ItemDiv>\n      <div className=\"item-image-container\">\n        <img className=\"item-image\" src={image_urls[0]} alt={name} />\n      </div>\n      <div className=\"item-details\">\n        <div className=\"item-name\" title={name}>\n          {itemName}\n        </div>\n        <div className=\"item-price\">\n          <div className=\"item-discount-price\">₹{discount_price}</div>\n          <div className=\"item-actual-price\">₹{price}</div>\n        </div>\n        <button className=\"cart-button\" onClick={handleAddCartButton}>\n          Add to Cart\n        </button>\n      </div>\n    </ItemDiv>\n  );\n};\n\nexport default ItemCard;\n","import { createSelector } from \"reselect\";\nimport { IReduxStore } from \"../../../reduxStore/reducer\";\nimport { ICategorySection } from \"../types\";\n\nconst getItemsForCategory = (state: IReduxStore, props: ICategorySection) => {\n  const categoryObj = state.categories[props.category.id];\n  return categoryObj.itemIds.map((itemId) => state.itemsHash[itemId]);\n};\n\nconst makeCategoryItemsSelector = () => {\n  return createSelector(getItemsForCategory, (items) => items);\n};\n\nexport default makeCategoryItemsSelector;\n","import { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport ItemCard from \"../ItemCard\";\n\nimport { IReduxStore } from \"../../../reduxStore/reducer\";\nimport makeCategoryItemsSelector from \"./categoryItemsSelector\";\n\nimport { IItem } from \"../../../utility/types\";\n\nconst GridDiv = styled.div`\n  padding: 1rem;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\n  grid-template-rows: auto;\n  grid-gap: 1rem;\n  justify-items: center;\n  background-color: #d8d8d8;\n`;\n\nconst CategoryWrapper = styled.div`\n  padding: 10px;\n  margin: 1rem;\n  border: 1px solid darkgray;\n  border-radius: 1rem;\n`;\n\nconst CategorySection: React.FunctionComponent<any> = (props) => {\n  const { categoryItems } = props;\n  return (\n    <CategoryWrapper>\n      <h2>{props.category.name}</h2>\n      <GridDiv>\n        {categoryItems.map((item: IItem) => (\n          <ItemCard key={item.id} item={item} />\n        ))}\n      </GridDiv>\n    </CategoryWrapper>\n  );\n};\n\n/**\n * New Memoized selector needed for each Instance of CategorySection, so that\n * each instance only render when required.\n */\nconst makeMapStateToProps = () => {\n  const categoryItemsSelector = makeCategoryItemsSelector();\n  const mapStateToProps = (state: IReduxStore, props) => {\n    return {\n      categoryItems: categoryItemsSelector(state, props),\n    };\n  };\n  return mapStateToProps;\n};\n\nexport default connect(makeMapStateToProps)(CategorySection);\n","import styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport CategorySection from \"./CategorySection\";\n\nimport { IReduxStore } from \"../../reduxStore/reducer\";\n\n/**\n * Should be rendered only once or any new category gets added,\n * This contain a major data of the app. Shouldn't be render more than required.\n */\nexport const getCategories = createSelector<\n  IReduxStore,\n  Array<{ id: string; name: string }>,\n  Array<{ id: string; name: string }>\n>(\n  (state) =>\n    Object.values(state.categories).map((category) => ({\n      id: category.id,\n      name: category.name,\n    })),\n  (categories) => categories\n);\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 300px;\n  grid-template-rows: auto;\n  grid-gap: 1rem;\n  justify-items: center;\n  background-color: white;\n`;\n\nconst Content = () => {\n  const categories = useSelector(getCategories);\n\n  return (\n    <ContentWrapper>\n      {categories.map((category) => (\n        <CategorySection key={category.id} category={category} />\n      ))}\n    </ContentWrapper>\n  );\n};\n\nexport default Content;\n","import { v4 as uuidv4 } from \"uuid\";\nimport styled from \"styled-components\";\nimport { Button, Divider, List } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport QuantityInput from \"../QuantityInput\";\n\nimport {\n  PLACE_ORDER,\n  REMOVE_ITEM_FROM_CART,\n  UPDATE_ITEM_OF_CART,\n} from \"../../reduxStore/action\";\nimport { getCart, getItemHash, getUser } from \"../../reduxStore/selectors\";\n\nconst CheckoutWrapper = styled.div`\n  margin: 100px;\n  margin-bottom: 100px;\n  border: 1px solid lightgray;\n  border-radius: 1rem;\n  display: flex;\n  flex-direction: column;\n\n  & h1 {\n    margin: 0 auto;\n  }\n  & .item-details {\n    display: flex;\n    flex-direction: column;\n\n    & .item-quantity,\n    .item-price,\n    .item-cost {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n    }\n    & .item-cost {\n      font-weight: 500;\n    }\n\n    & .item-remove {\n      color: blue;\n      text-decoration: underline;\n      cursor: pointer;\n    }\n  }\n\n  & .item-title,\n  .total-label {\n    margin-right: 1rem;\n    font-weight: 600;\n    font-style: italic;\n  }\n\n  & .list-footer {\n    display: flex;\n\n    & .total-cost {\n      display: flex;\n      margin-left: 1rem;\n      margin-right: auto;\n      font-weight: 800;\n    }\n    & .button-confirm {\n      margin-right: 1rem;\n      margin-left: auto;\n    }\n  }\n`;\n\nconst Checkout: React.FunctionComponent = (props) => {\n  const user = useSelector(getUser);\n  const cartData = useSelector(getCart);\n  const itemsHash = useSelector(getItemHash);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const cartItems = cartData.items.map((cartItem) => {\n    return {\n      ...itemsHash[cartItem.itemId],\n      quantity: cartItem.quantity,\n    };\n  });\n\n  const handleConfirm = () => {\n    console.log(\"handleConfirm\");\n    dispatch({\n      type: PLACE_ORDER,\n      payload: {\n        order: {\n          orderId: uuidv4(),\n          userId: user.id,\n          items: cartItems.map((cartItem) => {\n            return {\n              price: cartItem.discount_price,\n              quantity: cartItem.quantity,\n              itemId: cartItem.id,\n            };\n          }),\n        },\n        callbackFn: () => {\n          history.push(\"/\");\n        },\n      },\n    });\n  };\n\n  const totalCost = cartItems.reduce(\n    (reducedValue, cartItem) =>\n      reducedValue + cartItem.quantity * cartItem.discount_price,\n    0\n  );\n\n  return (\n    <CheckoutWrapper>\n      <h1>Checkout</h1>\n      <Divider />\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        dataSource={cartItems}\n        footer={\n          <div className=\"list-footer\">\n            <div className=\"total-cost\">\n              <div className=\"total-label\">Total Cost :</div>\n              <div>₹{totalCost}</div>\n            </div>\n            <Button\n              type=\"primary\"\n              shape=\"round\"\n              className=\"button-confirm\"\n              onClick={handleConfirm}\n            >\n              Confirm\n            </Button>\n          </div>\n        }\n        renderItem={(item) => {\n          const removeItem = () => {\n            dispatch({\n              type: REMOVE_ITEM_FROM_CART,\n              payload: {\n                itemId: item.id,\n              },\n            });\n          };\n\n          const updateQuantity = (value) => {\n            dispatch({\n              type: UPDATE_ITEM_OF_CART,\n              payload: {\n                itemId: item.id,\n                quantity: value,\n              },\n            });\n          };\n\n          return (\n            <List.Item\n              key={item.id}\n              extra={\n                <img width={272} alt={item.name} src={item.image_urls[0]} />\n              }\n            >\n              <List.Item.Meta title={item.name} />\n              <div className=\"item-details\">\n                <div className=\"flex-item item-quantity\">\n                  <div className=\"item-title\">Quantity :</div>\n                  <QuantityInput\n                    quantity={item.quantity}\n                    updateQuantity={updateQuantity}\n                  />\n                </div>\n                <div className=\"flex-item item-price\">\n                  <div className=\"item-title\">Price :</div>₹{item.price}\n                  <div className=\"total-cost\"></div>\n                </div>\n                <div className=\"flex-item item-cost\">\n                  <div className=\"item-title\">Total Cost :</div>₹\n                  {item.discount_price * item.quantity}\n                  <div className=\"total-cost\"></div>\n                </div>\n                <div className=\"flex-item item-remove\" onClick={removeItem}>\n                  Remove\n                </div>\n              </div>\n            </List.Item>\n          );\n        }}\n      />\n    </CheckoutWrapper>\n  );\n};\n\nexport default Checkout;\n","import mockBackend from \"./mock.json\";\nimport { IOrder } from \"./types\";\n\nexport const getItems = async () => {\n  return await new Promise((resolve) => {\n    const items = mockBackend.itemsHash;\n    console.log({ items });\n    resolve(items);\n  });\n};\n\nexport const getCategories = async () => {\n  return await new Promise((resolve) => {\n    const categories = mockBackend.categories;\n    resolve(categories);\n  });\n};\n\nexport const getUserOrders = async (userId: string) => {\n  return await new Promise((resolve) => {\n    const userOrders = (mockBackend.orders as IOrder[]).filter(\n      (order) => order.user_id === userId\n    );\n    resolve(userOrders);\n  });\n};\n\nexport const login = async (username: string, password: string) => {\n  return await new Promise((resolve, reject) => {\n    let userMatched = false;\n    let userObj: any = \"\";\n    mockBackend.users.forEach((user) => {\n      if (user.username === username && user.password === password) {\n        userMatched = true;\n        userObj = {\n          id: user.id,\n          email: user.email,\n          name: user.username,\n          hash_token: user.hash_token,\n        };\n      }\n    });\n    if (userMatched) {\n      resolve(userObj);\n    } else {\n      reject(\"Invalid Credentials\");\n    }\n  });\n};\n\nexport const isUserValid = async (user_token: string) => {\n  return await new Promise((resolve, reject) => {\n    const isValidUser = mockBackend.users.some(\n      (user) => user.hash_token === user_token\n    );\n    resolve(isValidUser);\n  });\n};\n","import styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form, Input, message } from \"antd\";\n\nimport { login } from \"../../utility/api\";\nimport { SET_USER } from \"../../reduxStore/action\";\n\nimport \"antd/dist/antd.css\";\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  /* border: 1px solid black; */\n  width: 600px;\n\n  & h1 {\n    text-decoration: underline;\n  }\n  & > div {\n    width: 600px;\n  }\n`;\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const onFinish = async (values) => {\n    try {\n      const response = (await login(values.username, values.password)) || \"\";\n\n      if (response) {\n        const user = { ...(response as Object), type: \"user\" };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch({\n          type: SET_USER,\n          payload: {\n            user,\n          },\n        });\n        history.push(\"/\");\n      }\n    } catch (error) {\n      message.error(error, 5);\n      console.log({ error });\n    }\n  };\n\n  return (\n    <Wrapper>\n      <h1>Login</h1>\n      <div>\n        <Form\n          labelCol={{ span: 8 }}\n          wrapperCol={{ span: 12 }}\n          name=\"basic\"\n          onFinish={onFinish}\n          onFinishFailed={() => {\n            console.log(\"onFinishedFailded\");\n          }}\n        >\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[{ required: true, message: \"Please input your username!\" }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your password!\" }]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Login;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Header from \"./Components/Header\";\nimport CartSideBar from \"./Components/CartSidebar\";\nimport Content from \"./Components/Content\";\nimport Checkout from \"./Components/Checkout\";\nimport Login from \"./Components/Login\";\n\nimport { getUser } from \"./reduxStore/selectors\";\nimport { useEffect } from \"react\";\nimport { FETCH_INITIAL_DATA } from \"./reduxStore/action\";\n\nfunction App() {\n  const user = useSelector(getUser);\n  const isLogedIn = user.type === \"user\";\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: FETCH_INITIAL_DATA });\n  }, []);\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <div style={{ marginTop: \"4rem\" }}>\n            <Header />\n            <Content />\n            <CartSideBar />\n          </div>\n        </Route>\n        <Route exact path=\"/checkout\">\n          <div style={{ marginTop: \"4rem\" }}>\n            <Header />\n            {isLogedIn ? <Checkout /> : <Redirect to={\"/login\"} />}\n          </div>\n        </Route>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { message } from \"antd\";\nimport {\n  put,\n  all,\n  call,\n  select,\n  takeEvery,\n  takeLatest,\n} from \"redux-saga/effects\";\nimport {\n  getCategories,\n  getItems,\n  getUserOrders,\n  isUserValid,\n} from \"../utility/api\";\nimport {\n  UPDATE_CART,\n  SET_CATEGORIES,\n  ADD_ITEM_TO_CART,\n  FETCH_USER_ORDERS,\n  SET_CART_TO_STORE,\n  FETCH_INITIAL_DATA,\n  UPDATE_ITEM_OF_CART,\n  REMOVE_ITEM_FROM_CART,\n  SET_USER,\n  SET_USER_ORDERS,\n  PLACE_ORDER,\n  ADD_ORDER,\n} from \"./action\";\nimport { getCart, getUser } from \"./selectors\";\nimport { ICart } from \"../utility/types\";\n\n/**\n * Fetch required itemHash for Homepage from backend.\n */\nfunction* fetchItems() {\n  try {\n    const itemsHash = yield call(getItems);\n    yield put({ type: \"SET_ITEMS\", payload: { itemsHash } });\n  } catch (error) {\n    console.log(\"Error in fetching get items\", error);\n  }\n}\n\n/**\n * Fetch required categories data for Homepage from backend.\n */\nfunction* fetchCategories() {\n  try {\n    const categories = yield call(getCategories);\n    yield put({ type: SET_CATEGORIES, payload: { categories } });\n  } catch (error) {\n    console.log(\"Error in fetchCategories saga\", error);\n  }\n}\n\nfunction* fetchUserOrders(action: any) {\n  try {\n    const userId = action.payload.userId;\n    const userOrders = yield call(getUserOrders, userId);\n    yield put({ type: SET_USER_ORDERS, orders: userOrders });\n  } catch (error) {\n    console.log(\"Error in fetching user orders\");\n  }\n}\n\n/**\n * Placed in redux because if we save cart values in backend as well, accross\n * browser and take the latest.\n */\nfunction* setCartDataToStore() {\n  try {\n    const curCartState = select(getCart);\n    const cartData =\n      JSON.parse(localStorage.getItem(\"cart\") || \"\") || curCartState;\n    console.log(cartData);\n    yield put({\n      type: UPDATE_CART,\n      payload: {\n        data: cartData,\n      },\n    });\n  } catch (error) {\n    console.log(\"Error in setting cart data from localstorage\");\n  }\n}\n\nfunction* setUserFromStore() {\n  try {\n    const curUserState = select(getUser);\n    const curUser =\n      JSON.parse(localStorage.getItem(\"user\") || \"\") || curUserState;\n\n    const hash_token = curUser.hash_token;\n    const validUser = yield isUserValid(hash_token);\n\n    const user = validUser ? curUser : { type: \"guest\" };\n\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    yield put({\n      type: SET_USER,\n      payload: {\n        user,\n      },\n    });\n  } catch (error) {}\n}\n\n/**\n * Fetch Initial Data values from backend\n */\nfunction* fetchIntialData() {\n  try {\n    yield all([call(fetchItems), call(fetchCategories)]);\n    yield call(setCartDataToStore);\n    yield call(setUserFromStore);\n    const user = yield select(getUser);\n    if (user.type === \"user\") {\n      const userId = user.id;\n      yield call(fetchUserOrders, { payload: userId });\n    }\n  } catch (error) {}\n}\n\nfunction* placeOrderSaga(action) {\n  try {\n    // remove values from cart & redux store\n    yield localStorage.setItem(\"cart\", JSON.stringify(\"\"));\n    yield put({\n      type: UPDATE_CART,\n      payload: {\n        data: {\n          last_update_data: new Date(),\n          items: [],\n        },\n      },\n    });\n    yield put({ type: ADD_ORDER, payload: action.payload.order });\n    yield action.payload?.callbackFn?.();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction* addItemToCartSaga(action: any) {\n  try {\n    const curCartState: ICart = yield select(getCart);\n    /** Avoid adding if already present */\n    let isAlreadyPresent = false;\n    curCartState.items.forEach((item) => {\n      if (item.itemId === action.payload.cartItem.itemId) {\n        isAlreadyPresent = true;\n      }\n    });\n    if (isAlreadyPresent) {\n      message.info(\"Item already present in the cart.\");\n      return;\n    }\n    const cartData = {\n      last_update_date: new Date() || curCartState.last_update_date,\n      items: [...curCartState.items, action.payload.cartItem],\n    };\n\n    yield put({ type: UPDATE_CART, payload: { data: cartData } });\n    localStorage.setItem(\"cart\", JSON.stringify(cartData));\n  } catch (error) {}\n}\n\nfunction* updateItemOfCartSaga(action: any) {\n  try {\n    const { itemId, quantity } = action.payload;\n    const curCartState: ICart = yield select(getCart);\n\n    const updatedItems = curCartState.items.map((cartItem) => {\n      if (cartItem.itemId === itemId) {\n        return { ...cartItem, quantity };\n      } else {\n        return cartItem;\n      }\n    });\n\n    const cartData = {\n      last_update_date: new Date() || curCartState.last_update_date,\n      items: updatedItems,\n    };\n\n    yield put({ type: UPDATE_CART, payload: { data: cartData } });\n    localStorage.setItem(\"cart\", JSON.stringify(cartData));\n  } catch (error) {}\n}\n\nfunction* removeItemFromCartSaga(action: any) {\n  try {\n    const curCartState: ICart = yield select(getCart);\n    const cartData = {\n      last_update_date: new Date() || curCartState.last_update_date,\n      items: curCartState.items.filter(\n        (item) => item.itemId !== action.payload.itemId\n      ),\n    };\n    yield put({ type: UPDATE_CART, payload: { data: cartData } });\n    localStorage.setItem(\"cart\", JSON.stringify(cartData));\n  } catch (error) {}\n}\n\nfunction* mySaga() {\n  yield takeLatest(FETCH_INITIAL_DATA, fetchIntialData);\n  yield takeLatest(FETCH_USER_ORDERS, fetchUserOrders);\n  yield takeLatest(SET_CART_TO_STORE, setCartDataToStore);\n  yield takeLatest(ADD_ITEM_TO_CART, addItemToCartSaga);\n  yield takeEvery(UPDATE_ITEM_OF_CART, updateItemOfCartSaga);\n  yield takeEvery(PLACE_ORDER, placeOrderSaga);\n  yield takeEvery(REMOVE_ITEM_FROM_CART, removeItemFromCartSaga);\n}\n\nexport default mySaga;\n","import {\n  IOrder,\n  ICart,\n  IUser,\n  IItemsHash,\n  ICategoryHash,\n} from \"../utility/types\";\nimport {\n  ADD_ORDER,\n  SET_CART_TO_STORE,\n  SET_CATEGORIES,\n  SET_ITEMS,\n  SET_USER,\n  SET_USER_ORDERS,\n  UPDATE_CART,\n} from \"./action\";\n\nexport interface IReduxStore {\n  cart: ICart;\n  user: IUser;\n  itemsHash: IItemsHash;\n  categories: ICategoryHash;\n  orders: IOrder[];\n}\n\nconst initialState: IReduxStore = {\n  cart: {\n    last_update_date: new Date(),\n    items: [],\n  },\n  user: {\n    type: \"guest\",\n  },\n  itemsHash: {},\n  categories: {},\n  orders: [],\n};\n\nconst rootReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case SET_ITEMS:\n      state = {\n        ...state,\n        itemsHash: action.payload.itemsHash,\n      };\n      return state;\n    case SET_CATEGORIES:\n      state = {\n        ...state,\n        categories: action.payload.categories,\n      };\n      return state;\n    case SET_CART_TO_STORE:\n      state = {\n        ...state,\n        cart: {\n          ...state.cart,\n          ...action.payload.data,\n        },\n      };\n      return state;\n    case UPDATE_CART:\n      state = {\n        ...state,\n        cart: {\n          ...state.cart,\n          ...action.payload.data,\n        },\n      };\n      return state;\n    case SET_USER:\n      state = {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload.user,\n        },\n      };\n      return state;\n    case SET_USER_ORDERS:\n      state = {\n        ...state,\n        orders: action.payload.orders,\n      };\n      return state;\n    case ADD_ORDER:\n      state = {\n        ...state,\n        orders: [...state.orders, action.payload],\n      };\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport mySaga from \"./sagas\";\nimport rootReducer from \"./reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers =\n  (window as any)[\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\"] || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(mySaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\nimport store from \"./reduxStore/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router basename=\"/ecommerce-app\">\n        <App />\n      </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\n\nif (process.env.NODE_ENV !== \"production\" && (module as any).hot) {\n  (module as any).hot.accept(\"./App\", renderApp);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nrenderApp();\n"],"sourceRoot":""}